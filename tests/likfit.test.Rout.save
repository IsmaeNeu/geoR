
R : Copyright 2002, The R Development Core Team
Version 1.6.1 Patched (2002-11-06)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

> require(geoR)
Loading required package: geoR 

------------------------------------------------
geoR - functions for geostatistical data analysis
geoR version 1.3-8 is now loaded
------------------------------------------------

[1] TRUE
> set.seed(123)
> options(digits = 3, width = 80)
> data(s100)
> ml <- likfit(s100, ini=c(0.5, 0.5), fix.nug = TRUE)
Loading required package: mva 
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta sigmasq     phi 
  0.777   0.752   0.183 

likfit: maximised log-likelihood = -83.6
> summary(ml)
Summary of the parameter estimation
-----------------------------------
Estimation method: maximum likelihood 

Parameters of the mean component (trend):
 beta 
0.777 

Parameters of the spatial component:
   correlation function: exponential
      (estimated) variance parameter sigmasq (partial sill) =  0.752
      (estimated) cor. fct. parameter phi (range parameter)  =  0.183
   anisotropy parameters:
      (fixed) anisotropy angle = 0  ( 0 degrees )
      (fixed) anisotropy ratio = 1

Parameter of the error component:
      (fixed) nugget = 0

Transformation parameter:
      (fixed) Box-Cox parameter = 1 (no transformation)

Maximised Likelihood:
   log.L n.params      AIC      BIC 
   -83.6      3.0    173.1    181.0 

Call:
likfit(geodata = s100, ini.cov.pars = c(0.5, 0.5), fix.nugget = TRUE)

> reml <- likfit(s100, ini=c(0.5, 0.5), fix.nug = TRUE, met = "REML")
---------------------------------------------------------------
likfit: likelihood maximisation using the function optimize.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optimize.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> summary(reml)
Summary of the parameter estimation
-----------------------------------
Estimation method: restricted maximum likelihood 

Parameters of the mean component (trend):
 beta 
0.748 

Parameters of the spatial component:
   correlation function: exponential
      (estimated) variance parameter sigmasq (partial sill) =  0.847
      (estimated) cor. fct. parameter phi (range parameter)  =  0.21
   anisotropy parameters:
      (fixed) anisotropy angle = 0  ( 0 degrees )
      (fixed) anisotropy ratio = 1

Parameter of the error component:
      (fixed) nugget = 0

Transformation parameter:
      (fixed) Box-Cox parameter = 1 (no transformation)

Maximised Likelihood:
   log.L n.params      AIC      BIC 
   -81.5      3.0    169.1    176.9 

Call:
likfit(geodata = s100, ini.cov.pars = c(0.5, 0.5), fix.nugget = TRUE, 
    method.lik = "REML")

> #plot(variog(s100))
> #lines(ml)
> #lines(reml, lty = 2)
> 
> ap <- grf(50, cov.pars=c(1, .3), nug=.3)
grf: process with  1  covariance structure(s)
grf: nugget effect is: tausq= 0.3 
grf: covariance model 1 is: exponential(sigmasq=1, phi=0.3)
grf: decomposition algorithm used is:  cholesky 
grf: simulation(s) on randomly chosen locations with  50  points
grf: End of simulation procedure. Number of realizations: 1 
> ml <- likfit(ap, ini=c(0.5, 0.5), nug=0.2)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta   tausq sigmasq     phi 
  0.463   0.279   1.538   0.266 

likfit: maximised log-likelihood = -72.1
> ml <- likfit(ap, ini=c(0.5, 0.5), fix.nug=TRUE, nug=0.2)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta sigmasq     phi 
  0.454   1.574   0.226 

likfit: maximised log-likelihood = -72.2
> ml <- likfit(ap, data=exp(ap$data), ini=c(0.5, 0.5), nug=0.2, fix.lambda=FALSE)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta   tausq sigmasq     phi  lambda 
  0.511   0.307   1.622   0.278   0.038 

likfit: maximised log-likelihood = -106
> ml <- likfit(ap, ini=c(0.5, 0.5), nug=0.2, fix.psiR = FALSE)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta   tausq sigmasq     phi    psiR 
  0.463   0.300   1.249   0.199   2.846 

likfit: maximised log-likelihood = -71.2
> ml <- likfit(ap, ini=c(0.5, 0.5), nug=0.2, fix.psiA = FALSE, fix.psiR = FALSE)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
    beta    tausq  sigmasq      phi     psiA     psiR 
   0.494    0.391    2.055    0.538    0.573 6361.961 

likfit: maximised log-likelihood = -68.2
> ml <- likfit(ap, ini=c(0.5, 0.5), cov.model="matern", fix.kappa=TRUE, kappa=2)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta   tausq sigmasq     phi 
  0.438   0.564   1.206   0.112 

likfit: maximised log-likelihood = -72.6
> ml <- likfit(ap, ini=c(0.5, 0.5), cov.model="matern", fix.kappa=FALSE)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta   tausq sigmasq     phi   kappa 
  0.470   0.204   1.630   0.321   0.401 

likfit: maximised log-likelihood = -72.1
> ml <- likfit(ap, ini=expand.grid(c(.5,1,1.5),c(.1,.2,.3)))
likfit: searching for best initial value ... selected values:
              sigmasq phi   tausq kappa lambda psiR  psiA 
initial.value "1.5"   "0.1" "0"   "0.5" "1"    "1"   "0"  
status        "est"   "est" "est" "fix" "fix"  "fix" "fix"
likelihood value: -73.1481383520876 
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta   tausq sigmasq     phi 
  0.463   0.279   1.538   0.266 

likfit: maximised log-likelihood = -72.1
> ml <- likfit(ap, ini=expand.grid(c(.5,1),c(.1,.2)), nug=c(.2,.3))
likfit: searching for best initial value ... selected values:
              sigmasq phi   tausq kappa lambda psiR  psiA 
initial.value "1"     "0.2" "0.3" "0.5" "1"    "1"   "0"  
status        "est"   "est" "est" "fix" "fix"  "fix" "fix"
likelihood value: -72.6428792954057 
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ml
likfit: estimated model parameters:
   beta   tausq sigmasq     phi 
  0.463   0.279   1.538   0.266 

likfit: maximised log-likelihood = -72.1
> 
> ## Multiple realizations
> ap1 <- grf(40, cov.pars=c(1, .3))
grf: process with  1  covariance structure(s)
grf: nugget effect is: tausq= 0 
grf: covariance model 1 is: exponential(sigmasq=1, phi=0.3)
grf: decomposition algorithm used is:  cholesky 
grf: simulation(s) on randomly chosen locations with  40  points
grf: End of simulation procedure. Number of realizations: 1 
> ap1
$coords
            x      y
 [1,] 0.51290 0.2473
 [2,] 0.41162 0.0308
 [3,] 0.94544 0.4977
 [4,] 0.00282 0.7738
 [5,] 0.32813 0.1583
 [6,] 0.45472 0.5607
 [7,] 0.42985 0.4596
 [8,] 0.01471 0.3814
 [9,] 0.03698 0.5571
[10,] 0.82787 0.2778
[11,] 0.38425 0.7943
[12,] 0.12382 0.1876
[13,] 0.34179 0.0843
[14,] 0.39442 0.7704
[15,] 0.10576 0.7457
[16,] 0.01465 0.8000
[17,] 0.59776 0.8617
[18,] 0.14678 0.4292
[19,] 0.43600 0.5520
[20,] 0.17418 0.2023
[21,] 0.47225 0.7421
[22,] 0.49640 0.6592
[23,] 0.63828 0.1966
[24,] 0.67391 0.7002
[25,] 0.93253 0.9391
[26,] 0.35624 0.4991
[27,] 0.05537 0.6195
[28,] 0.76365 0.8298
[29,] 0.08856 0.0974
[30,] 0.47979 0.6963
[31,] 0.11459 0.8576
[32,] 0.11387 0.1913
[33,] 0.39505 0.1968
[34,] 0.66949 0.4619
[35,] 0.20569 0.3556
[36,] 0.91085 0.0976
[37,] 0.06703 0.0699
[38,] 0.05056 0.6430
[39,] 0.90831 0.7409
[40,] 0.33855 0.7796

$data
 [1] -0.3503 -1.6232  0.3938 -0.2088 -1.8327 -0.9072 -0.0995 -0.0957 -0.2273
[10] -0.5763 -0.3412 -0.2723 -1.3770 -0.7357  0.4400 -0.2161 -1.2159 -0.2274
[19] -0.3335  0.3930 -0.4941 -0.3122 -0.5563 -0.4520 -0.1172  0.2344  0.7217
[28] -0.4122 -0.1217 -0.2119  0.2155 -0.1883 -0.6578 -1.3838 -0.3513  0.1744
[37]  0.1529  0.9277 -0.0204 -0.6466

$cov.model
[1] "exponential"

$nugget
[1] 0

$cov.pars
[1] 1.0 0.3

$kappa
[1] 0.5

$lambda
[1] 1

$aniso.pars
[1] "no anisotropy parameters provided/used"

$method
[1] "cholesky"

$sim.dim
[1] "2d"

$.Random.seed
[1]          1 1810263887  696990551

$messages
$messages$nst
[1] "grf: process with  1  covariance structure(s)\n"

$messages$nugget
[1] "grf: nugget effect is: tausq= 0 \n"

$messages$cov.structures
[1] "grf: covariance model 1 is: exponential(sigmasq=1, phi=0.3)\n"


$call
grf(n = 40, cov.pars = c(1, 0.3))

attr(,"class")
[1] "grf"        "geodata"    "variomodel"
> ap2 <- grf(grid=ap1$coords[sample(1:40, 20),], cov.pars=c(1, .3))
grf: process with  1  covariance structure(s)
grf: nugget effect is: tausq= 0 
grf: covariance model 1 is: exponential(sigmasq=1, phi=0.3)
grf: decomposition algorithm used is:  cholesky 
grf: simulation on locations provided by the user
grf: End of simulation procedure. Number of realizations: 1 
> ap2
$coords
           x      y
 [1,] 0.0370 0.5571
 [2,] 0.0554 0.6195
 [3,] 0.9108 0.0976
 [4,] 0.4798 0.6963
 [5,] 0.4723 0.7421
 [6,] 0.9454 0.4977
 [7,] 0.3842 0.7943
 [8,] 0.1238 0.1876
 [9,] 0.1058 0.7457
[10,] 0.3386 0.7796
[11,] 0.1468 0.4292
[12,] 0.7636 0.8298
[13,] 0.1146 0.8576
[14,] 0.6695 0.4619
[15,] 0.5129 0.2473
[16,] 0.3418 0.0843
[17,] 0.5978 0.8617
[18,] 0.4964 0.6592
[19,] 0.0147 0.8000
[20,] 0.1742 0.2023

$data
 [1] -0.0976 -0.4713  1.5806  1.4610  1.1042  0.3585  1.6775 -0.4644  1.3684
[10]  1.3824  0.2434  1.6987  1.6160  0.1727  0.7620 -0.2627  1.3307  1.9166
[19]  0.6163 -0.5018

$cov.model
[1] "exponential"

$nugget
[1] 0

$cov.pars
[1] 1.0 0.3

$kappa
[1] 0.5

$lambda
[1] 1

$aniso.pars
[1] "no anisotropy parameters provided/used"

$method
[1] "cholesky"

$sim.dim
[1] "2d"

$.Random.seed
[1]          1 1257128235  472257394

$messages
$messages$nst
[1] "grf: process with  1  covariance structure(s)\n"

$messages$nugget
[1] "grf: nugget effect is: tausq= 0 \n"

$messages$cov.structures
[1] "grf: covariance model 1 is: exponential(sigmasq=1, phi=0.3)\n"


$call
grf(grid = ap1$coords[sample(1:40, 20), ], cov.pars = c(1, 0.3))

attr(,"class")
[1] "grf"        "geodata"    "variomodel"
> ap3 <- grf(grid=ap1$coords[sample(1:40, 30),], cov.pars=c(1, .3))
grf: process with  1  covariance structure(s)
grf: nugget effect is: tausq= 0 
grf: covariance model 1 is: exponential(sigmasq=1, phi=0.3)
grf: decomposition algorithm used is:  cholesky 
grf: simulation on locations provided by the user
grf: End of simulation procedure. Number of realizations: 1 
> ap3
$coords
            x      y
 [1,] 0.47225 0.7421
 [2,] 0.00282 0.7738
 [3,] 0.94544 0.4977
 [4,] 0.01471 0.3814
 [5,] 0.34179 0.0843
 [6,] 0.35624 0.4991
 [7,] 0.39505 0.1968
 [8,] 0.05537 0.6195
 [9,] 0.10576 0.7457
[10,] 0.20569 0.3556
[11,] 0.33855 0.7796
[12,] 0.11387 0.1913
[13,] 0.01465 0.8000
[14,] 0.49640 0.6592
[15,] 0.45472 0.5607
[16,] 0.91085 0.0976
[17,] 0.51290 0.2473
[18,] 0.08856 0.0974
[19,] 0.42985 0.4596
[20,] 0.39442 0.7704
[21,] 0.17418 0.2023
[22,] 0.38425 0.7943
[23,] 0.03698 0.5571
[24,] 0.32813 0.1583
[25,] 0.47979 0.6963
[26,] 0.14678 0.4292
[27,] 0.76365 0.8298
[28,] 0.06703 0.0699
[29,] 0.12382 0.1876
[30,] 0.41162 0.0308

$data
 [1]  1.0422  1.5378  0.5709  0.8299 -0.8838 -0.1878 -1.3316  0.8016  0.9126
[10] -0.8779 -0.0422 -0.1584  1.1716  1.5530 -0.2806  1.0196 -0.2568 -0.4181
[19] -0.2901 -0.7768 -0.4145 -0.8363  1.2480  0.0858  1.2384  0.2022 -0.0235
[28] -0.3676 -0.0603 -0.4919

$cov.model
[1] "exponential"

$nugget
[1] 0

$cov.pars
[1] 1.0 0.3

$kappa
[1] 0.5

$lambda
[1] 1

$aniso.pars
[1] "no anisotropy parameters provided/used"

$method
[1] "cholesky"

$sim.dim
[1] "2d"

$.Random.seed
[1]         1 239384966 952566714

$messages
$messages$nst
[1] "grf: process with  1  covariance structure(s)\n"

$messages$nugget
[1] "grf: nugget effect is: tausq= 0 \n"

$messages$cov.structures
[1] "grf: covariance model 1 is: exponential(sigmasq=1, phi=0.3)\n"


$call
grf(grid = ap1$coords[sample(1:40, 30), ], cov.pars = c(1, 0.3))

attr(,"class")
[1] "grf"        "geodata"    "variomodel"
> ap <- list(coords = rbind(ap1$coords, ap2$coords, ap3$coords), data = c(ap1$data, ap2$data, ap3$data))
> ap$realisations <- c(rep(1,40), rep(2,20), rep(3,30))
> ap.fit <- likfit(ap, ini=c(.5, .5), reali=ap$real)
---------------------------------------------------------------
likfit: likelihood maximisation using the function optim.
likfit: Use control() to pass additional
         arguments for the maximisation function.
        For further details see documentation for optim.
likfit: It is highly advisable to run this function several
        times with different initial values for the parameters.
likfit: WARNING: This step can be time demanding!
---------------------------------------------------------------
likfit: end of numerical maximisation.
> ap.fit
likfit: estimated model parameters:
   beta   tausq sigmasq     phi 
  0.195   0.000   0.534   0.147 

likfit: maximised log-likelihood = -74.9
> 
> 
> 
